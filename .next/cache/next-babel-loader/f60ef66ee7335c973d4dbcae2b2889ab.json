{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hyose\\\\Documents\\\\tsc_test\\\\pages\\\\users\\\\[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { sampleUserData } from '../../utils/sample-data';\nimport Layout from '../../components/Layout';\nimport ListDetail from '../../components/ListDetail';\n\nconst StaticPropsDetail = ({\n  item,\n  errors\n}) => {\n  if (errors) {\n    return __jsx(Layout, {\n      title: \"Error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }, \"Error:\"), \" \", errors));\n  }\n\n  return __jsx(Layout, {\n    title: `${item ? item.name : 'User Detail'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, item && __jsx(ListDetail, {\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 22\n    }\n  }));\n};\n\nexport default StaticPropsDetail;\nexport const getStaticPaths = async () => {\n  const paths = sampleUserData.map(user => ({\n    params: {\n      id: user.id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  try {\n    const id = params === null || params === void 0 ? void 0 : params.id;\n    const item = sampleUserData.find(data => data.id === Number(id));\n    return {\n      props: {\n        item\n      }\n    };\n  } catch (err) {\n    return {\n      props: {\n        errors: err.message\n      }\n    };\n  }\n};","map":{"version":3,"sources":["C:/Users/hyose/Documents/tsc_test/pages/users/[id].tsx"],"names":["sampleUserData","Layout","ListDetail","StaticPropsDetail","item","errors","color","name","getStaticPaths","paths","map","user","params","id","toString","fallback","getStaticProps","find","data","Number","props","err","message"],"mappings":";;;AAGA,SAASA,cAAT,QAA+B,yBAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAOA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAA4B;AAClD,MAAIA,MAAJ,EAAW;AACP,WACI,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,OACgDD,MADhD,CADJ,CADJ;AAOH;;AACD,SACI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAG,GAAED,IAAI,GAAGA,IAAI,CAACG,IAAR,GAAe,aAAc,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,IAAI,IAAI,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,CADJ;AAKH,CAfD;;AAiBA,eAAeD,iBAAf;AAEA,OAAO,MAAMK,cAA8B,GAAG,YAAY;AACtD,QAAMC,KAAK,GAAGT,cAAc,CAACU,GAAf,CAAoBC,IAAD,KAAW;AACxCC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAEF,IAAI,CAACE,EAAL,CAAQC,QAAR;AAAN;AADgC,GAAX,CAAnB,CAAd;AAGA,SAAO;AAACL,IAAAA,KAAD;AAAQM,IAAAA,QAAQ,EAAC;AAAjB,GAAP;AACH,CALM;AAOP,OAAO,MAAMC,cAA8B,GAAG,OAAO;AAACJ,EAAAA;AAAD,CAAP,KAAoB;AAC9D,MAAI;AACA,UAAMC,EAAE,GAAGD,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEC,EAAnB;AACA,UAAMT,IAAI,GAAGJ,cAAc,CAACiB,IAAf,CAAqBC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYM,MAAM,CAACN,EAAD,CAAhD,CAAb;AACA,WAAO;AAAEO,MAAAA,KAAK,EAAE;AAAEhB,QAAAA;AAAF;AAAT,KAAP;AACH,GAJD,CAIE,OAAOiB,GAAP,EAAY;AACV,WAAO;AAAED,MAAAA,KAAK,EAAE;AAAEf,QAAAA,MAAM,EAAEgB,GAAG,CAACC;AAAd;AAAT,KAAP;AACH;AACJ,CARM","sourcesContent":["import { GetStaticProps, GetStaticPaths } from 'next'\r\n\r\nimport { User } from '../../interfaces'\r\nimport { sampleUserData } from '../../utils/sample-data'\r\nimport Layout from '../../components/Layout'\r\nimport ListDetail from '../../components/ListDetail'\r\n\r\ntype Props = {\r\n    item?: User\r\n    errors?: string\r\n}\r\n\r\nconst StaticPropsDetail = ({item, errors }: Props) => {\r\n    if (errors){\r\n        return (\r\n            <Layout title={\"Error\"}>\r\n                <p>\r\n                    <span style={{color: 'red'}}>Error:</span> {errors}\r\n                </p>\r\n            </Layout>\r\n        )\r\n    }\r\n    return (\r\n        <Layout title={`${item ? item.name : 'User Detail'}`}>\r\n            {item && <ListDetail item={item}/>}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default StaticPropsDetail\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n    const paths = sampleUserData.map((user) => ({\r\n        params: { id: user.id.toString() },\r\n    }))\r\n    return {paths, fallback:false}\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async ({params}) => {\r\n    try {\r\n        const id = params?.id\r\n        const item = sampleUserData.find((data) => data.id === Number(id))\r\n        return { props: { item }}\r\n    } catch (err) {\r\n        return { props: { errors: err.message }}\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}